[{"C:\\Users\\ziv\\WebstormProjects\\project\\src\\index.js":"1","C:\\Users\\ziv\\WebstormProjects\\project\\src\\main.js":"2","C:\\Users\\ziv\\WebstormProjects\\project\\src\\Routes.js":"3","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\genders.js":"4","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\languages.js":"5","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\areasOfInterest.js":"6","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\cities.js":"7","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormOrganization.js":"8","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormElderly.js":"9","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormVolunteer.js":"10","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormResponsible.js":"11","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\Modal.js":"12","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\LoginForm.js":"13","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\AdminPage.js":"14","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\ResponsiblePage.js":"15","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\responsibleTypes.js":"16","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\organizationTypes.js":"17","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\preferredDaysAndHoursList.js":"18","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\digitalDevicesList.js":"19","C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\servicesList.js":"20","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\ManageUsers.js":"21","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\AssignableUsers.js":"22"},{"size":223,"mtime":1609786667443,"results":"23","hashOfConfig":"24"},{"size":301,"mtime":1609832814097,"results":"25","hashOfConfig":"24"},{"size":1729,"mtime":1609919005908,"results":"26","hashOfConfig":"24"},{"size":174,"mtime":1609701449399,"results":"27","hashOfConfig":"24"},{"size":817,"mtime":1609701449319,"results":"28","hashOfConfig":"24"},{"size":673,"mtime":1609701449299,"results":"29","hashOfConfig":"24"},{"size":3952,"mtime":1609701449283,"results":"30","hashOfConfig":"24"},{"size":7237,"mtime":1609857903176,"results":"31","hashOfConfig":"24"},{"size":18544,"mtime":1609873495354,"results":"32","hashOfConfig":"24"},{"size":18510,"mtime":1609874545115,"results":"33","hashOfConfig":"24"},{"size":12433,"mtime":1609861353041,"results":"34","hashOfConfig":"24"},{"size":1663,"mtime":1609606258568,"results":"35","hashOfConfig":"24"},{"size":1406,"mtime":1609878186542,"results":"36","hashOfConfig":"24"},{"size":1793,"mtime":1609875724757,"results":"37","hashOfConfig":"24"},{"size":4271,"mtime":1609921496913,"results":"38","hashOfConfig":"24"},{"size":273,"mtime":1609856906826,"results":"39","hashOfConfig":"24"},{"size":227,"mtime":1609857699795,"results":"40","hashOfConfig":"24"},{"size":1287,"mtime":1609869379076,"results":"41","hashOfConfig":"24"},{"size":798,"mtime":1609869256273,"results":"42","hashOfConfig":"24"},{"size":180,"mtime":1609871874349,"results":"43","hashOfConfig":"24"},{"size":465,"mtime":1609921800977,"results":"44","hashOfConfig":"24"},{"size":766,"mtime":1609923344548,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"y7euxm",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ziv\\WebstormProjects\\project\\src\\index.js",[],["93","94"],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\main.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\Routes.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\genders.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\languages.js",[],["95","96"],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\areasOfInterest.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\cities.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormOrganization.js",["97"],"import React, {Component} from 'react';\r\nimport Modal from './Modal.js';\r\nimport './RegistrationForm.css';\r\nimport Select from \"react-select\";\r\nimport organizationTypes from \"../resources/organizationTypes\";\r\n\r\n\r\nclass RegistrationFormOrganization extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            organizationName:'',\r\n            organizationType: '',\r\n            phoneNumber: '',\r\n            valid: {\r\n                organizationName: true,\r\n                organizationType: true,\r\n                phoneNumber: true\r\n            },\r\n            touched: {\r\n                organizationName:false,\r\n                organizationType: false,\r\n                phoneNumber: false\r\n            },\r\n            modalisOpen: false\r\n        };\r\n\r\n        this.rexExpMap = {\r\n            organizationName: /^[a-zA-Z\\u00c4\\u00e4\\u00d6\\u00f6\\u00dc\\u00fc\\u00df]+$/,\r\n            organizationType: /^[a-zA-Z\\u00c4\\u00e4\\u00d6\\u00f6\\u00dc\\u00fc\\u00df]+$/,\r\n            phoneNumber: /^\\+?\\d+(-\\d+)*$/\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.checkData = this.checkData.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.checkOnSubmit = this.checkOnSubmit.bind(this);\r\n    }\r\n\r\n    handleChange = (e, name) => {\r\n        this.setState({[e.target.name]: e.target.value}, () => {\r\n            this.checkData(this.rexExpMap[name], this.state[name], this.state.valid[name], name)\r\n        });\r\n    }\r\n\r\n    checkData(regExp, stateName, stateValid, name) {\r\n        this.setState({\r\n            touched: {...this.state.touched, [name]: true}\r\n        });\r\n        if (regExp.test(stateName)) {\r\n            this.setState({\r\n                valid: {...this.state.valid, [name]: true}\r\n            });\r\n        } else {\r\n            this.setState({\r\n                valid: {...this.state.valid, [name]: false}\r\n            });\r\n        }\r\n    }\r\n\r\n    validate(organizationName, organizationType, phoneNumber) {\r\n        return {\r\n            organizationName: organizationName.length === 0,\r\n            organizationType: organizationType.length === 0,\r\n            phoneNumber: phoneNumber.length === 0\r\n        };\r\n    }\r\n\r\n    requiredStyle(name) {\r\n        const show = (this.state[name] === \"\" || !this.state.valid[name]) && this.state.touched[name];\r\n        return {display: show ? 'block' : 'none'};\r\n    }\r\n\r\n    errorMessages(name) {\r\n        const requiredStr = 'This field is required.';\r\n        const invalidStr = 'Enter valid ' + name + '.';\r\n        return !this.state.valid[name] && this.state[name] !== \"\" ? invalidStr : requiredStr;\r\n    }\r\n\r\n    checkOnSubmit() {\r\n        const {organizationName, organizationType, phoneNumber} = this.state;\r\n        const formFilled = !(organizationName === '' || organizationType === '' || phoneNumber === '');\r\n        const formInvalid = Object.keys(this.state.valid).some(x => !this.state.valid[x]);\r\n        const formHasErrors = !formFilled || formInvalid;\r\n\r\n        if (!formHasErrors) {\r\n            this.toggleModal();\r\n        }\r\n        this.setState({\r\n            touched: {\r\n                organizationName:true,\r\n                organizationType: true,\r\n                phoneNumber: true\r\n            },\r\n        });\r\n\r\n        this.handleSubmit()\r\n    }\r\n\r\n    handleSubmit() {\r\n        fetch(`http://localhost:3001/admin/registerOrganization`, {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({...this.state})\r\n        })\r\n            .then(response => console.log(response.json()))\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState(prevState => ({\r\n            modalisOpen: !prevState.modalisOpen\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.organizationName, this.state.organizationType, this.state.phoneNumber);\r\n        const shouldMarkError = (field) => {\r\n            const hasError = errors[field];\r\n            const shouldShow = this.state.touched[field];\r\n            return hasError ? shouldShow : false;\r\n        };\r\n        const helpMessage = (name) => {\r\n            return {display: shouldMarkError(name) ? 'none' : 'block'};\r\n        };\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"register-form\">\r\n                    <div className=\"form\">\r\n                        <div>\r\n                            <label>\r\n                                שם ארגון\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.organizationName}\r\n                                    name=\"organizationName\"\r\n                                    className={shouldMarkError(\"organizationName\") ? \"error\" : \"\"}\r\n                                    onChange={(e) => this.handleChange(e, \"organizationName\")}/>\r\n                            </label>\r\n                            <span className=\"required-field\"\r\n                                  style={this.requiredStyle('organizationName')}>{this.errorMessages('organizationName')}</span>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                סוג ארגון\r\n                                <Select\r\n                                    name=\"organizationType\"\r\n                                    className={shouldMarkError(\"organizationType\") ? \"error\" : \"\"}\r\n                                    value ={this.state.organizationType}\r\n                                    options={organizationTypes}\r\n                                    onChange={(value)=>this.setState({organizationType: value})}\r\n                                />\r\n                            </label>\r\n                            <span className=\"required-field\"\r\n                                  style={this.requiredStyle('organizationType')}>{this.errorMessages('organizationType')}</span>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>\r\n                                מספר טלפון\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.phoneNumber}\r\n                                    name=\"phoneNumber\" id=\"phoneNumber\"\r\n                                    className={shouldMarkError(\"phoneNumber\") ? \"error\" : \"\"}\r\n                                    onChange={(e) => this.handleChange(e, \"phoneNumber\")}/>\r\n\r\n                            </label>\r\n                            </div>\r\n                        <button className=\"sb-btn\" type=\"button\" onClick={this.checkOnSubmit}>SUBMIT</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                {this.state.modalisOpen ?\r\n                    <Modal\r\n                        text='Your Data'\r\n                        {...this.state}\r\n                        closeModal={this.toggleModal}\r\n                    />\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegistrationFormOrganization;\r\n\r\n","C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormElderly.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormVolunteer.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\RegistrationFormResponsible.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\Modal.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\LoginForm.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\AdminPage.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\ResponsiblePage.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\responsibleTypes.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\organizationTypes.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\preferredDaysAndHoursList.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\digitalDevicesList.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\resources\\servicesList.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\ManageUsers.js",[],"C:\\Users\\ziv\\WebstormProjects\\project\\src\\components\\AssignableUsers.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":122,"column":15,"nodeType":"106","messageId":"107","endLine":122,"endColumn":26},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"no-unused-vars","'helpMessage' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]